/* 
 * Código proposto por IA - Gemini 2.0
 * a partir das instruções previstas no ficheiro MOC.md 
 * 
 * Este é um pequeno programa de exemplo na linguagem MOC.
 * Ele demonstra algumas das funcionalidades da linguagem,
 * como declaração de variáveis, operações aritméticas,
 * condicionais, ciclos e funções de entrada/saída.
 *  
 * Esta IA não colocou os comentários com a regra definida, mas sim com a base do C
 *  
 */

/* Protótipos de funções */
int factorial(int n);
void print_array(int v[], int size);

/* Função principal */
void main(void) {
  int num;
  double result;
  int i;
  int numbers[5];

  writes("Introduza um número inteiro: ");
  num = read();

  if (num >= 0) {
    result = factorial(num);
    writes("O factorial de ");
    write(num);
    writes(" é ");
    write(result);
    writes("\n");
  } else {
    writes("O número introduzido não é positivo.\n");
  }

  writes("A introduzir 5 números inteiros no array:\n");
  for (i = 0; i < 5; i = i + 1) {
    writes("Introduza o número ");
    write(i + 1);
    writes(": ");
    numbers[i] = read();
  }

  writes("Os números introduzidos no array são: ");
  print_array(numbers, 5);
  writes("\n");
}

/* Função para calcular o factorial de um número inteiro */
int factorial(int n) {
  int fact = 1;
  int i;

  if (n == 0) {
    return 1;
  } else {
    for (i = 1; i <= n; i = i + 1) {
      fact = fact * i;
    }
    return fact;
  }
}

/* Função para imprimir os elementos de um array de inteiros */
void print_array(int v[], int size) {
  int i;
  for (i = 0; i < size; i = i + 1) {
    write(v[i]);
    if (i < size - 1) {
      writes(", ");
    }
  }
}